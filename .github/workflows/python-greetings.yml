name: mdTestesanaRGabrens

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  install-pip-deps:
    name: install pip dependencies
    runs-on: self-hosted
    steps:
      - name: Checkout main repository
        uses: actions/checkout@v3.5.2

      - name: Checkout python-greetings repository
        uses: actions/checkout@v3.5.2
        with:
          repository: mtararujs/python-greetings
          path: python-greetings

      ### prieks manas linux vides datora
      # - name: Install dependencies
      #   run: |
      #     python -m venv venv
      #     source venv/bin/activate
      #     pip install -r requirements.txt
      #   working-directory: python-greetings
      #   shell: bash

      - name: Install dependencies
        run: pip install -r requirements.txt
        working-directory: python-greetings
        shell: pwsh
  

  deploy-to-dev:
    name: deploy to dev
    needs: install-pip-deps
    runs-on: self-hosted

    steps:

      - name: Setup PM2 environment
        run: echo "PM2_HOME=$HOME/.pm2" >> $GITHUB_ENV
        shell: pwsh
        
      - name: Checkout main repository
        uses: actions/checkout@v3.5.2

      - name: Clone python-greetings repository
        uses: actions/checkout@v3.5.2
        with:
          repository: mtararujs/python-greetings
          path: python-greetings

      ### prieks manas linux vides datora
      # - name: Install dependencies
      #   run: |
      #     python -m venv venv
      #     source venv/bin/activate
      #     pip install -r requirements.txt
      #   working-directory: python-greetings
      #   shell: bash

      # - name: Stop existing service
      #   run: |
      #     source venv/bin/activate
      #     pm2 delete greetings-app-dev || true
      #   shell: bash
      #   working-directory: python-greetings
      
      # - name: Start server for Dev environment
      #   run: |
      #     source venv/bin/activate
      #     pm2 start app.py --name greetings-app-dev -- --port 7001
      #   shell: bash
      #   working-directory: python-greetings 

      - name: Stop existing service
        run: |
          pm2 delete greetings-app-dev 2>$null
          $LastExitCode = 0
        shell: pwsh
        working-directory: python-greetings
      
      - name: Start server for Dev environment
        run: pm2 start app.py --name greetings-app-dev
        shell: pwsh
        working-directory: python-greetings 

  test-on-dev:
    name: test on dev
    needs: deploy-to-dev
    runs-on: self-hosted
    steps:

      - name: Setup PM2 environment
        run: echo "PM2_HOME=$HOME/.pm2" >> $GITHUB_ENV
        shell: pwsh

      - name: Checkout pipeline definitions
        uses: actions/checkout@v3.5.2

      - name: Clone course-js-api-framework repository
        uses: actions/checkout@v3.5.2
        with:
          repository: mtararujs/course-js-api-framework
          # repository: Raimis01/course-js-api-framework
          path: course-js-api

      - name: Install Node.js dependencies
        run: npm install
        working-directory: course-js-api

      # - name: Run tests for dev environment
      #   run: npm run greetings || echo "Tests failed, but workflow continues."
      #   working-directory: course-js-api


      - name: Check current running services
        run: pm2 list
        shell: pwsh
        working-directory: course-js-api

      - name: Run tests for dev environment
        run: |
          npm run greetings
          $LastExitCode = 0
        working-directory: course-js-api


  # deploy-to-staging:
  #   name: deploy to staging
  #   needs: test-on-dev
  #   runs-on: self-hosted
  #   steps:
  #     - name: Checkout main repository
  #       uses: actions/checkout@v3.5.2

  #     - name: Clone python-greetings repository
  #       uses: actions/checkout@v3.5.2
  #       with:
  #         repository: mtararujs/python-greetings
  #         path: python-greetings

  #     - name: Install dependencies
  #       run: |
  #         python -m venv venv
  #         source venv/bin/activate
  #         pip install -r requirements.txt
  #       working-directory: python-greetings
  #       shell: bash

  #     - name: Stop existing service
  #       run: |
  #         source venv/bin/activate
  #         pm2 delete greetings-app-staging || true
  #       shell: bash
  #       working-directory: python-greetings
      
  #     - name: Start server for staging environment
  #       run: |
  #         source venv/bin/activate
  #         pm2 start app.py --name greetings-app-staging -- --port 7002
  #       shell: bash
  #       working-directory: python-greetings 

  #     - name: Install dependencies
  #       run: |
  #         python -m venv venv
  #         source venv/bin/activate
  #         pip install -r requirements.txt
  #       working-directory: python-greetings
  #       shell: bash

  #     - name: Stop existing service
  #       run: |
  #         source venv/bin/activate
  #         pm2 delete greetings-app-staging || true
  #       shell: bash
  #       working-directory: python-greetings
      
  #     - name: Start server for staging environment
  #       run: |
  #         source venv/bin/activate
  #         pm2 start app.py --name greetings-app-staging -- --port 7002
  #       shell: bash
  #       working-directory: python-greetings 

  # test-on-staging:
  #   name: test on staging
  #   needs: deploy-to-staging
  #   runs-on: self-hosted
  #   steps:
  #     - name: Checkout pipeline definitions
  #       uses: actions/checkout@v3.5.2

  #     - name: Clone course-js-api-framework repository
  #       uses: actions/checkout@v3.5.2
  #       with:
  #         repository: mtararujs/course-js-api-framework
  #         path: course-js-api

  #     - name: Install Node.js dependencies
  #       run: npm install
  #       working-directory: course-js-api

  #     - name: Run tests for staging environment
  #       run: npm run greetings greetings_staging || echo "Tests failed, but workflow continues."
  #       working-directory: course-js-api

  # deploy-to-preprod:
  #   name: deploy to preprod
  #   needs: test-on-staging
  #   runs-on: self-hosted
  #   steps:
  #     - name: Checkout main repository
  #       uses: actions/checkout@v3.5.2

  #     - name: Clone python-greetings repository
  #       uses: actions/checkout@v3.5.2
  #       with:
  #         repository: mtararujs/python-greetings
  #         path: python-greetings

  #     - name: Install dependencies
  #       run: |
  #         python -m venv venv
  #         source venv/bin/activate
  #         pip install -r requirements.txt
  #       working-directory: python-greetings
  #       shell: bash

  #     - name: Stop existing service
  #       run: |
  #         source venv/bin/activate
  #         pm2 delete greetings-app-preprod || true
  #       shell: bash
  #       working-directory: python-greetings
      
  #     - name: Start server for preprod environment
  #       run: |
  #         source venv/bin/activate
  #         pm2 start app.py --name greetings-app-preprod -- --port 7003
  #       shell: bash
  #       working-directory: python-greetings 

  # test-on-preprod:
  #   name: test on preprod
  #   needs: deploy-to-preprod
  #   runs-on: self-hosted
  #   steps:
  #     - name: Checkout pipeline definitions
  #       uses: actions/checkout@v3.5.2

  #     - name: Clone course-js-api-framework repository
  #       uses: actions/checkout@v3.5.2
  #       with:
  #         repository: mtararujs/course-js-api-framework
  #         path: course-js-api

  #     - name: Install Node.js dependencies
  #       run: npm install
  #       working-directory: course-js-api

  #     - name: Run tests for preprod environment
  #       run: npm run greetings greetings_preprod || echo "Tests failed, but workflow continues."
  #       working-directory: course-js-api


  # deploy-to-prod:
  #   name: deploy to prod
  #   needs: test-on-preprod
  #   runs-on: self-hosted
  #   steps:
  #     - name: Checkout main repository
  #       uses: actions/checkout@v3.5.2

  #     - name: Clone python-greetings repository
  #       uses: actions/checkout@v3.5.2
  #       with:
  #         repository: mtararujs/python-greetings
  #         path: python-greetings

  #     - name: Install dependencies
  #       run: |
  #         python -m venv venv
  #         source venv/bin/activate
  #         pip install -r requirements.txt
  #       working-directory: python-greetings
  #       shell: bash

  #     - name: Stop existing service
  #       run: |
  #         source venv/bin/activate
  #         pm2 delete greetings-app-prod || true
  #       shell: bash
  #       working-directory: python-greetings
      
  #     - name: Start server for prod environment
  #       run: |
  #         source venv/bin/activate
  #         pm2 start app.py --name greetings-app-prod -- --port 7004
  #       shell: bash
  #       working-directory: python-greetings 

  # test-on-prod:
  #   name: test on prod
  #   needs: deploy-to-prod
  #   runs-on: self-hosted
  #   steps:
  #     - name: Checkout pipeline definitions
  #       uses: actions/checkout@v3.5.2

  #     - name: Clone course-js-api-framework repository
  #       uses: actions/checkout@v3.5.2
  #       with:
  #         repository: mtararujs/course-js-api-framework
  #         path: course-js-api

  #     - name: Install Node.js dependencies
  #       run: npm install
  #       working-directory: course-js-api

  #     - name: Run tests for prod environment
  #       run: npm run greetings greetings_prod || echo "Tests failed, but workflow continues."
  #       working-directory: course-js-api
